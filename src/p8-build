#!/usr/bin/env node

const program = require('commander')
  .command('p8')
  .usage('build [options] [name]')
  .description('outputs .p8 file with specified name (defaults to name prop in p8.json)')
  .option('-p, --print', 'prints built code to stdout')
  .parse(process.argv)

const { print, args } = program
const p8json = require(`${process.cwd()}/p8.json`)
const {
  compilePicoRequire,
  compilePicoInit,
  writeSync,
  lowercase
} = require('./utils')
const start = '\n__lua__\n'
const end = '\n__gfx__\n'
const next = start + [
  `-- ${lowercase(p8json.name)} ${lowercase(p8json.version)}`,
  `-- by ${lowercase(p8json.author)}`,
  (p8json.dependencies ? compilePicoRequire(p8json.dependencies) : null),
  compilePicoInit(p8json.main)
].filter(x => x).join('\n') + end
const filename = `${args[0] || p8json.name}.p8`
let cart

try {
  cart = require('fs').readFileSync(filename, 'utf8')
} catch(err) {
  cart = require('./empty-cart')
}

const prev = cart.substring(
  cart.indexOf(start),
  cart.lastIndexOf(end) + end.length
)

const output = cart.replace(prev, next)

if (print) {
  console.log(output)
} else {
  writeSync(filename, output)
}
